.horizontal_center {
  text-align: center;
  display: block;
  margin: 0 auto;
}

.vertical_center_container { // lo que este dentro de esto queda centrado verticalmente
  width:100%;
  height:100%;
  display:flex;
  align-items:center;
  flex-direction: column;

  //
  //min-height: 100%;  /* Fallback for vh unit */
  //min-height: 100vh; /* You might also want to use
  //                      'height' property instead.
  //
  //                      Note that for percentage values of
  //                      'height' or 'min-height' properties,
  //                      the 'height' of the parent element
  //                      should be specified explicitly.
  //
  //                      In this case the parent of '.vertical-center'
  //                      is the <body> element */
  //
  ///* Make it a flex container */
  //display: -webkit-box;
  //display: -moz-box;
  //display: -ms-flexbox;
  //display: -webkit-flex;
  //display: flex;
  //
  ///* Align the bootstrap's container vertically */
  //-webkit-box-align : center;
  //-webkit-align-items : center;
  //-moz-box-align : center;
  //-ms-flex-align : center;
  //align-items : center;
  //
  ///* In legacy web browsers such as Firefox 9
  //   we need to specify the width of the flex container */
  //width: 100%;
  //
  ///* Also 'margin: 0 auto' doesn't have any effect on flex items in such web browsers
  //   hence the bootstrap's container won't be aligned to the center anymore.
  //
  //   Therefore, we should use the following declarations to get it centered again */
  //-webkit-box-pack : center;
  //-moz-box-pack : center;
  //-ms-flex-pack : center;
  //-webkit-justify-content : center;
  //justify-content : center;
}

.noselect {
  user-select: none;
  /* DEJAR PREFIJOS DE BROWSERS EN ESTO */
  -moz-user-select: none;
  -webkit-user-select: none;
  -o-user-select: none;
  -ms-user-select: none;
  /* ********************************** */
}

.divImagen {
  width: auto;
  height: auto;
  background: Transparent;
  background-size: contain;
  background-repeat: no-repeat;
  border: none;
  outline: none;
}

/* elemento que estando en un container flex se expande y al haber overflow se scrollea (por ej grids items comerciar) */
.scrollFlex {
  flex: 1;
  overflow-y: auto;
  padding-right: 2px;
}

.justifiedContainer {
  display: flex;
  justify-content: space-around;
}